takero,383,262,5	script	Lace	622,{
	disable_items;
	mes "[Lace La Zard]";
	mes "Welcome to Fashion Stone!!";
	mes "My name is Lace La Zard who will make your 'Power Shoulder' dream come true.";
	next;
	mes "[Lace La Zard]";
	mes "Bring your ^ff0000Costume Garment^000000 and ^ff0000Garment Stone^000000, I will complete the perfect upgrade for you.!";
	mes "I found this formula while working on my own humble body upgrading!";
	next;
	if (select( "Apply ability.", "End Conversation." ) == 2) {
		mes "[Lace La Zard]";
		mes "Yes? Your want to look more?";
		close;
	}
	if (checkweight(1119,3) == 0) {
		mes "[Lace La Zard]";
		mes "Well... Your shoulder doesn't look possilbe for any more upgrade...!";
		mes "Don't be cruel to your shoulder!";
		next;
		mes "It seems you have too many items on you.";
		mes "Come back after clearing some inventory spaces.";
		close;
	}
	.@part = EQI_COSTUME_GARMENT;
	.@equip_id = getequipid(.@part);
	if (.@equip_id == -1) {
		mes "[Lace La Zard]";
		mes "Put the garment on your shoulder.";
		mes "I need to have a look at it to check for upgrading posibility..";
		close;
	}

	// costume garment list allowed (incomplete)
	switch(.@equip_id) {
	case 20502:	// C_Devil_Wing
	case 20504:	// C_Cupid_Wing_Pink
	case 20505:	// C_Cupid_Wing_Skyblue
	case 20506:	// C_Invisible_Manteau
	case 20507:	// C_Poring_Bag
	case 20509:	// C_Wings_of_Uriel
	case 20510:	// C_SwordWing
	case 20511:	// C_Blue_Fairy_Wing
	case 20727:	// Brilliant_Golden_Wings
	case 20737:	// C_Kirin_Wing
	case 20746:	// C_Rudra_Wing
	case 20761:	// C_Wing_Of_Happiness
	case 20762:	// C_GreatDevilWing
	case 20763:	// C_Amistr_Bag
	case 20764:	// C_Fallen_Angel_Wing
	case 20765:	// C_Archangel_Wing
	case 33028: //C TakeRo Wings of PVM God
	case 20516:	// Costume Wings of Michael	
	

		break;
	default:
		mes "[Lace La Zard]";
		mes "I need to have a look at it to check for upgrading posibility..";// custom
		close;
	}

	.@equip_refine = getequiprefinerycnt(.@part);
	setarray .@card[0], getequipcardid(.@part, 0), getequipcardid(.@part, 1), getequipcardid(.@part, 2), getequipcardid(.@part, 3);

	mes "[Lace La Zard]";
	mes "Wow ^0000FF" + getitemname(.@equip_id) + "^000000!!! You got some sense there, aren't you?";
	mes "Great!! I'm fully ready for this upgrade!!";
	next;
	setarray .@data$[0],
		25717, 25717, "Guillotine Cross Stone(Garment)",
        45023, 45023, "Guillotine_Cross_Stone_II_Garment",
        25456, 25456, "Warlock_Stone_Garment",
        45015, 45015, "Warlock_Stone_II_Garment",
        25412, 25412, "Sura Stone(Garment)",
        25797, 25797, "Sura_Stone_II_Garment",
        25416, 25416, "Ranger Stone(Garment)",
        45003, 45003, "Ranger_Stone_II_Garment",
        25420, 25420, "Sorcerer Stone(Garment)",
        25801, 25801, "Sorcerer_Stone_II_Garment",
        25448, 25448, "Rune Knight Stone(Garment)",
        1000296, 1000296, "Rune_Knight_Stone_II_Garment",
        25449, 25449, "Geneticist_Stone_Garment",
        1000300, 1000300, "Geneticist_Stone_II_Garment",
        25493, 25493, "Shadow_Chaser_Stone_Garment",
        25805, 25805, "Shadow_Chaser_Stone_II_Garment",
        25497, 25497, "Mechanic_Stone_Garment",
        45007, 45007, "Mechanic_Stone_II_Garment",
        25709, 25709, "Arch_Bishop_Stone_Garment",
        45011, 45011, "Archbishop_Stone_II_Garment",
        25713, 25713, "Royal_Guard_Stone_Garment",
        1000217, 1000217, "Royal_Guard_Stone_II_Garment",
        25501, 25501, "Wanderer_Minstrel_Stone_Garment",
        1000304, 1000304, "Wanderer_Minstrel_Stone_II_Garment",
        25842, 25842, "Soul_Reaper_Stone_Garment",
        25849, 25849, "Star_Emperor_Stone_Garment",
        25853, 25853, "Kagerou_Stone_Garment",
        25854, 25854, "Oboro_Stone_Garment",
        25858, 25858, "Rebellion_Stone_Garment",
        25862, 25862, "Doram_Stone_Garment";



	.@size = getarraysize(.@data$);
	for ( .@i = 0; .@i < .@size; .@i += 3 ) {
		.@id = atoi(.@data$[.@i]);
		.@menu$ += sprintf( "%d. %s (%d) left:", (.@j+1), getitemname(.@id), countitem(.@id) );
		.@j++;
	}
	.@menu$ += "End Conversation.";
	.@s = (select(.@menu$) - 1) * 3;
	if (.@s == .@size) {
		mes "[Lace La Zard]";
		mes "Yes? Your want to look more?";
		close;
	}
	.@id = atoi(.@data$[.@s]);
	.@enchant = atoi(.@data$[.@s+1]);
	if (getequipid(.@part) < 0 || countitem(.@id) < 1) {
		mes "[Lace La Zard]";
		mes "You must have both costume item and ability stone for this upgrading work.";
		close;
	}
	mes "^FF0000   !!! Caution !!!^000000";
	mes "^ff0000This upgrade can be failed.^000000";
	mes "^ff0000If the item already has extra ability, we will reset item's ability and give " + .@data$[.@s+2] + ".^000000";
	mes "^ff0000Are you sure about upgrading this item?^000000";
	next;
	if (select( "Yes.", "No." ) == 2) {
		mes "[Lace La Zard]";
		mes "Yes? Your want to look more?";
		close;
	}

	// anti-hack
	if (callfunc("F_IsEquipIDHack", .@part, .@equip_id) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3]) || callfunc("F_IsEquipRefineHack", .@part, .@equip_refine))
		close;

	delitem .@id, 1;
	delequip .@part;
	if (rand(100) < 50) {
		mes "[Lace La Zard]";
		mes "Beautiful!!";
		mes "Did I really made this myself!!!!";
		.@card[0] = .@enchant;
	}
	else {
		mes "[Lace La Zard]";
		mes "Oh no!";
		mes "Crash!!!!! I cannot show this failure to the World!!!";
		.@card[0] = 0;
	}
	getitem2 .@equip_id,1,1,.@equip_refine,0,.@card[0],.@card[1],.@card[2],.@card[3];
	close;
}

//top/MID/LOW

takero,383,258,8	script	Aver	618,{
	disable_items;
	mes "[Aver]";
	mes "Welcome to Fashion Stone!!";
	next;
	mes "[Aver]";
	mes "We take various costume items.";
	next;
	mes "[Aver]";
	mes "If you want cool styling for your costume Hat, please come to me 'Aver'!";
	mes "Don't forget to bring ^ff0000your own costume Hat and costume stones^000000~";
	next;
	if (select( "Apply ability.", "End Conversation." ) == 2) {
		mes "[Aver]";
		mes "Please check our other upgrading services~";
		close;
	}
	if (checkweight(1119,3) == 0) {
		mes "[Aver]";
		mes "Kiaaaaach!!!";
		mes "I hate bulging bags!";
		mes "No matter how cool your hat looks, that fat bag of yours is a fashion terror you know!";
		next;
		mes "[Aver]";
		mes "It seems you hAver too many items on you.";
		mes "Come back after clearing some inventory spaces.";
		close;
	}
	.@eq_top = getequipid(EQI_COSTUME_HEAD_TOP);
	.@eq_mid = getequipid(EQI_COSTUME_HEAD_MID);
	.@eq_low = getequipid(EQI_COSTUME_HEAD_LOW);

	if (.@eq_top == -1 && .@eq_mid == -1 && .@eq_low == -1) {
		mes "[Aver]";
		mes "You must wear item you want to add ability.";
		mes "Then, I will be able to help you out.";
		close;
	}
	if (.@eq_top > -1) {
		.@part = EQI_COSTUME_HEAD_TOP;
		.@equip_id = .@eq_top;
	}
	else if (.@eq_mid > -1) {
		.@part = EQI_COSTUME_HEAD_MID;
		.@equip_id = .@eq_mid;
	}
	else if (.@eq_low > -1) {
		.@part = EQI_COSTUME_HEAD_LOW;
		.@equip_id = .@eq_low;
	}

	switch(.@part) {
	case EQI_COSTUME_HEAD_TOP:
		switch(.@equip_id) {
			// top
		case 18740:	// C_Hair_Of_The_Strong
		case 18741:	// C_Will_O_Wisp
		case 19294:	// C_CatEars_Cyber_HeadP_R
		case 19507:	// Fine_Sun
		case 19515:	// Yellow_Hat
		case 19516:	// Singing_Bird
		case 19517:	// Cocks_Comb
		case 19518:	// Rainbow
		case 19519:	// Lightning_Cloud
		case 19520:	// Rain_Cloud
		case 19521:	// Charlie_Hat
		case 19522:	// Mini_Crown1
		case 19523:	// Donation_Ribbon
		case 19524:	// C_Green_Feeler
		case 19525:	// C_Jack_A_Dandy
		case 19526:	// C_Helm
		case 19527:	// C_Sharp_Gear
		case 19529:	// C_Angelic_Chain
		case 19537:	// C_Gryphon_Hat
		case 19543:	// Oliver_Wolf_Hood
		case 19544:	// C_Tare_Neko_Cru
		case 19545:	// C_Boys_Cap
		case 19546:	// C_Valkyrie_Helm
		case 19547:	// C_Deviruchi_Cap
		case 19548:	// C_Frog_Cap
		case 19549:	// C_Magestic_Goat
		case 19573:	// C_Heart_Wing_Hairband
		case 19575:	// C_Rising_Black_Dragon
		case 19576:	// C_Tare_Pope
		case 19577:	// 10th_Anni_Poring_Hat
		case 19585:	// C_Feather_Beret
		case 19586:	// C_Pink_Bunny_Band_J
		case 19587:	// C_King_Poring_Hat
		case 19590:	// C_Twin_Ribbon_J
		case 19592:	// C_Hibiscus_J
		case 19599:	// C_Imp_Hat
		case 19600:	// Drooping_Kiehl
		case 19601:	// Drooping_Aliot
		case 19602:	// C_Invisible_Cap
		case 19608:	// C_Chick_Hat
		case 19613:	// C_Valkyrie_Feather_Band
		case 19618:	// C_Mask_Of_Fox
		case 19625:	// C_Bunny_Band
		case 19629:	// C_Tiara
		case 19630:	// C_Crown
		case 19632:	// C_Hat
		case 19633:	// C_Flower_Hairband
		case 19635:	// C_Mini_Propeller
		case 19637:	// C_Nurse_Cap
		case 19639:	// C_Sahkkat
		case 19643:	// C_Whikebain_Ears
		case 19646:	// C_Ramen_Hat
		case 19647:	// C_Red_Deviruchi_Cap
		case 19650:	// C_Rainbow_Feather_Deco
		case 19653:	// C_Marcher_Hat
		case 19654:	// C_J_Captain_Hat
		case 19655:	// C_Tiraya_Bonnet
		case 19656:	// C_Minstrel_Hat
		case 19657:	// C_Captain_Hat
		case 19659:	// C_Gray_Fur_Hat
		case 19665:	// C_Poring_Cake_Cap
		case 19667:	// C_Helm_Of_Dragoon
		case 19668:	// C_Wind_Milestone
		case 19677:	// C_Soulless_Wing
		case 19682:	// C_Santa_Poring_Hat
		case 19684:	// C_Happy_Wig
		case 19694:	// C_Vane_Hairpin
		case 19702:	// C_Santa_Hat_1
		case 19706:	// C_Red_Dress_Hat
		case 19712:	// C_Little_Angel_Doll
		case 19715:	// C_Scarf
		case 19719:	// C_Coronet
		case 19721:	// C_Darkness_Helm
		case 19723:	// C_Sacred_Torch_Coronet
		case 19728:	// C_Tare_Zonda
		case 19729:	// C_Neko_Mimi_Kafra
		case 19731:	// C_Satanic_Chain
		case 19733:	// C_Panda_Cap
		case 19737:	// C_Corsair_K
		case 19738:	// C_Detective_Hat_K
		case 19739:	// C_Sleeping_Kitty_Cat
		case 19745:	// C_Holy_Marching_Hat_J
		case 19750:	// C_Saint_Frill_Ribbon
		case 19758:	// C_King_Frog_Hat
		case 19761:	// C_White_Lily
		case 19762:	// C_Happy_Peace_Proof
		case 19763:	// C_Leaf_Cat_Hat
		case 19771:	// C_Butterfly_Hairpin
		case 19782:	// C_Drooping_Kitty
		case 19784:	// C_Morrigane's_Helm
		case 19786:	// C_Mistress_Crown
		case 19789:	// C_Sweet_Gents
		case 19790:	// C_Wedding_Veil
		case 19795:	// C_Lord_Circlet
		case 19796:	// C_Bone_Helm
		case 19797:	// C_Apple_Of_Archer
		case 19799:	// C_Golden_Gear
		case 19800:	// C_Carnation_Hairband
		case 19807:	// C_Majestic_Helmet
		case 19818:	// C_Droop_Morocc_Minion
		case 19824:	// C_Evil_Druid_Hat
		case 19825:	// C_Vicious_Stop_Bandage
		case 19827:	// C_Amistr_Cap
		case 19828:	// C_Fedora
		case 19829:	// C_Straw_Hat
		case 19831:	// C_Filir_Hat
		case 19833:	// C_Fillet
		case 19835:	// C_Lif_Doll_Hat
		case 19836:	// C_L_Magestic_Goat
		case 19839:	// C_Vanilmirth_Hat
		case 19842:	// C_Puppy_Hat
		case 19843:	// C_Cat_Hairband
		case 19844:	// C_Turban
		case 19845:	// C_Hair_Protector
		case 19847:	// C_Big_Sis_Ribbon
		case 19848:	// C_Angeling_Hat
		case 19851:	// C_Brown_Bear_Cap
		case 19852:	// C_Galapago_Cap
		case 19858:	// C_Leaf_Headgear
		case 19859:	// C_Flying_Angel
		case 19860:	// C_Cryptura_Hair_Cap
		case 19861:	// C_Heart_Hair_Pin
		case 19862:	// C_Horn_Of_Succubus
		case 19863:	// C_Inccubus_Horn
		case 19865:	// C_Joker_Jester
		case 19866:	// C_Blue_Pajamas_Hat
		case 19874:	// C_Carnival_Circlet
		case 19876:	// C_Rabbit_Ear_Hat
		case 19878:	// C_Drooping_Bunny
		case 19883:	// C_Piamette_Hood
		case 19884:	// C_Vanargandr_Helm
		case 19913:	// C_Poo_Poo_Hat
		case 19930:	// C_Angel_Mini_Silk_Hat
		case 19931:	// C_Lazy_Raccoon
		case 19932:	// C_Cap_Of_Concentration
		case 19934:	// C_10Gallon_Hat_Of_Flame
		case 19935:	// C_Hunting_Cap_Of_Gust
		case 19936:	// C_Knit_Cap_Of_Water
		case 19937:	// C_Silk_Hat_Of_Earth
		case 19939:	// C_Antler
		case 19941:	// C_Ear_Mufs
		case 19953:	// C_Parade_Cap
		case 19955:	// C_Mini_Tree_J
		case 19977:	// C_Golden_Exclamation
		case 19978:	// C_Silver_Exclamation
		case 19979:	// C_Golden_Question
		case 19980:	// C_Silver_Question
		case 19983:	// C_Flower_Hairpin
		case 19984:	// C_Winter_Hat
		case 20017:	// C_Marionette_Doll
		case 20036:	// C_Sword_Master_Crown
		case 20046:	// C_Decoration_bluerose
		case 20049:	// C_Plaster
		case 20050:	// C_Ph.D_Hat
		case 20057:	// C_Feather_Bonnet
		case 20063:	// C_Yellow_Brain_Hat
		case 20064:	// Blue_Brain_Hat
		case 20070:	// C_Alpaca_Hood
		case 20073:	// C_Hair_Band
		case 20074:	// C_Biretta
		case 20090:	// C_Egg_Shell
		case 20092:	// C_Sales_Signboard
		case 20093:	// C_Star_Sparkling
		case 20094:	// C_Fillet_Green
		case 20095:	// C_Fillet_Red
		case 20096:	// C_Fillet_Blue
		case 20097:	// C_Fillet_White
		case 20114:	// C_Funeral_Costume
		case 20118:	// C_Hat_Of_Cake
		case 20119:	// C_Fur_Hat
		case 20120:	// C_Antenna
		case 20121:	// C_Lotus_Flower_Hat
		case 20130:	// C_Whisper_Tall_Hat
		case 20133:	// C_Poring_Mascot_Costume
		case 20151:	// C_Poison_Spore_Hat
		case 20157:	// C_Fish_On_Head
		case 20158:	// C_Circlet
		case 20159:	// C_Blue_Hair_Band
		case 20160:	// C_Fried_Egg
		case 20161:	// C_Prontera_Army_Cap
		case 20175:	// C_Diabolic_Headphone
		case 20179:	// C_Monkey_On_Fur_Hat
		case 20180:	// C_Westren_Grace
		case 20181:	// C_Mistic_Rose
		case 20182:	// C_Mottled_Egg_Shell
		case 20184:	// C_Party_Hat
		case 20186:	// C_Magni_Cap
		case 20197:	// C_Amistr_Beret
		case 20199:	// C_Evil_Marcher_Hat
		case 20200:	// C_Rabbit_Head_Dress
		case 20203:	// C_Bandana
		case 20204:	// C_Hunting_Cap
		case 20205:	// C_Fancy_Flower
		case 20207:	// C_Stripe_Band
		case 20208:	// C_Necktie
		case 20214:	// C_Evil_Marcher_Hat_J
		case 20224:	// C_Red_Tailed_Ribbon
		case 20225:	// C_Pumpkin_Hat
		case 20226:	// C_Hair_Brush
		case 20231:	// C_Snowman_Hat
		case 20232:	// C_Celines_Ribbon
		case 20233:	// C_Gold_Angel_Sculpture
		case 20238:	// C_Blue_Drooping_Kitty
		case 20242:	// C_Snownow_Hat
		case 20248:	// C_Black_Strong_Hair
		case 20249:	// C_Red_Strong_Hair
		case 20250:	// C_White_Strong_Hair
		case 20253:	// C_Droopy_Alice_Doll
		case 20254:	// C_Ribbon_Yellow
		case 20258:	// C_Blue_Head_Dress
		case 20262:	// C_Fox_Ears_Bell_Ribbon
		case 20263:	// C_Hat_Of_Drowsy_Cat
		case 20266:	// C_Secret_Zipper
		case 20269:	// C_White_Fox_Ear_Ribbon
		case 20271:	// C_Sunflower
		case 20272:	// C_Snowy_Horn
		case 20273:	// C_Soft_Sheep_Hat
		case 20277:	// C_Balloon_Hat
		case 20278:	// C_Man_Medal
		case 20283:	// C_Over_Protector
		case 20383:	// C_Magicdecoy_Doll
		case 20433:	// C_Louise_Red_Hat
		case 20447:	// C_Small_Poring_Band
		case 20452:	// C_berry_Prince_Crown
		case 20458:	// C_Wild_Poring_Rider
		case 20463:	// C_Two_Tone_Beret
		case 20464:	// C_Monochrome_RibbonHat
		case 20467:	// C_Elemental_Crown
		case 20483:	// C_Butterfly_Barrettes
		case 20489:	// C_Pope_Crown
		case 20490:	// C_Full_Bloom_Hp_Blue
		case 20491:	// C_Laser_Of_Eagle
		case 20495:	// C_Quati_Hat_J
		case 20498:	// C_Elephant_Hat
		case 20508:	// C_Poster_Girl_Hat
		case 31027:	// C_Pretty_Bear
		case 31031:	// C_Tare_Pope_Casual
		case 31032:	// C_Tare_Luwmin
		case 31040:	// C_Magical_Feather
		case 31062:	// C_Eleanor_Wig
		case 31123:	// C_Ghostring_Tall_Hat
		case 31125:	// C_QueenAnzRevenge
		case 31137:	// C_Blue_Rose_Ornament
		case 31139:	// C_White_Rabbit_Ear
		case 31147:	// C_Tare_Domovoi
		case 31149:	// C_Nydhog_Wig
		case 31151:	// C_Chasher_Ear
		case 31158:	// C_Squirrel_Ear_Hat
		case 31176:	// C_Looking
		case 31177:	// C_Tail_Hat
		case 31180:	// C_Shura_King_Pledge
		case 31200:	// C_Wrapping_Ribbon
		case 31204:	// C_Drooping_White_Kitty
		case 31249:	// C_Rabbit_Hopping
		case 31252:	// C_Cat_Ear_Hat_White
		case 31294:	// C_Jirant_Circlet_Red
		case 31314:	// C_Ghost_Holiday
		case 31318:	// C_Gerhard_Von_Devi
		case 31329:	// C_Alice_Wig
		case 31331:	// C_Chung_E_Shinyon_Cap
		case 31332:	// Khalitzburg_KN_Helm_BL
		case 31370:	// C_Straight_Long_YLK
		case 31372:	// C_Binit_Doll_Hat
		case 31582:	// C_Jirant_Circlet
		case 31382:	// C_Cat_Ears_Punkish
		case 31385:	// C_Gothic_Pumpkin_Head
		case 31396:	// C_Sorcerer_Hood
		case 31397:	// C_Pope_Sitting_Head
		case 31405:	// C_Eleanor_Wig_YL
		case 31406:	// C_Nydhog_Wig_WH
		case 31407:	// C_Alice_Wig_PK
		case 31412:	// C_Virgo_Crown
		case 31414:	// C_Cancer_Diadem
		case 31430:	// C_Seppl_Hat_TW
		case 31431:	// C_Curupira_Hat_TW
		case 31433:	// C_Astro_Circle
		case 31439:	// C_Fluffy_Heart_Earmuffs
		case 31440:	// C_Snow_Bear_Food
		case 31451:	// C_Blue_Frill_Ribbon
		case 31456:	// C_Baby_Leopard_Cat
		case 20227:	// C_Husky_Hat
		case 31474:	// C_Straight_Long_BL
		case 31475:	// C_Black_Fox_Ear_Ribbon
		case 31481:	// C_CatCoffeeCup_TW
		case 31489:	// C_Bouquet_Hat
		case 31504:	// C_Starving_Fish_Hat
		case 31509:	// C_Fawn_Ear
		case 31529:	// C_Happy_Rabbit_Ribbon
		case 31546:	// C_Clock_Casket_RD
		case 31564:	// C_Variant_Veil
		case 31565:	// C_Princess_Ribbon_Crown
		case 31573:	// C_Mecha_Cat_Ears
		case 31598:	// C_Forest_Guide
		case 31624:	// C_HeartOfCat_TW
		case 31628:	// C_Bogy_Cap_TW
			// top + mid
		case 19555:	// C_Crescent_Helm
		case 19574:	// C_Lord_of_Death
		case 19578:	// C_Goggle
		case 19598:	// C_Wondering_Wolf_Helm
		case 19612:	// C_Headset_OST
		case 19710:	// C_Wings_Of_Victory
		case 19760:	// C_Rainbow_Veil
		case 19775:	// C_Marvelous_Wig
		case 19823:	// C_White_Cat_Hood
		case 19864:	// C_Afro_Wig
		case 19928:	// C_Gothic_Heart_Wing
		case 20402:	// C_Holy_Klobuk
		case 20493:	// C_Wing_Headphone
		case 31205:	// C_L_Orc_Hero_Helm
		case 31415:	// C_Wanderer_Sakkat
			// top + low
		case 20217:	// C_Arabian_Veil
			// top + mid + low
		case 19556:	// C_Kabuki_Mask
		case 19746:	// C_Cap_Of_Blindness
		case 19821:	// C_Hyegun_Hat
		case 19849:	// C_Munak_Turban
		case 19850:	// C_Bongun_Hat
		case 20481:	// C_Mask_of_Ifrit
		case 31409:	// C_Barrel_Helm
			break;
		default:
			mes "[Aver]";
			mes "Well...";
			mes "This hat is currently not available for upgrade.";
			close;
		}
		break;

	case EQI_COSTUME_HEAD_MID:
		switch(.@equip_id) {
			// mid
		case 18742:	// C_MoonStar_Accessory
		case 18744:	// C_World_Star
		case 19291:	// C_Shiba_Inu
		case 19509:	// Butterfly_Wing_Ear
		case 19510:	// Nut_On_Head
		case 19511:	// Heart_Eye_Patch1
		case 19512:	// Heart_Eye_Patch2
		case 19550:	// C_Blush
		case 19551:	// C_Elven_Ears
		case 19603:	// C_Invisible_Sunglasses
		case 19621:	// C_Ear_Of_Devils_Wing
		case 19624:	// C_Round_Eyes
		case 19734:	// C_Binoculars
		case 19735:	// C_Fin_Helm
		case 19752:	// C_Shelter_Wing_Ears
		case 19755:	// C_YinYang_Earring
		case 19781:	// C_Ear_Of_Angel's_Wing_
		case 19787:	// C_Devoted_Eyes
		case 19826:	// C_Ice_Wing_Ear
		case 19830:	// C_Sunglasses
		case 19846:	// C_Opera_Ghost_Mask
		case 19871:	// C_Music_Decoration
		case 19885:	// C_Blinker
		case 19886:	// C_Luxury_Sunglasses
		case 19887:	// C_One_Eyed_Glass
		case 19888:	// C_Glasses
		case 19889:	// C_Pair_Of_Red_Ribbon
		case 19912:	// C_Cat_Eye
		case 19925:	// C_One_Eyed_Glasses
		case 19954:	// C_3D_Glasses
		case 19989:	// C_Mouton_Life
		case 20115:	// C_Under_Rim_Glasses
		case 20125:	// C_Mini_Glasses
		case 20145:	// C_Robo_Eye
		case 20146:	// C_Angel_Spirit
		case 20147:	// C_Bell_Pigeon
		case 20149:	// C_Hexagon_Spectacles
		case 20215:	// C_Black_Devil_Mask
		case 20221:	// C_Eyes_Of_Ifrit
		case 20255:	// C_Love_Cheek
		case 20270:	// C_Gryphon_Wing_Ears
		case 20295:	// C_Poring_Sunglasses_J
		case 20298:	// C_Happy_Lunatic_Ear
		case 20318:	// C_Charleston_Antenna
		case 20319:	// C_Crimson_Booster
		case 20325:	// C_Little_Aquarium
		case 20376:	// C_Memories_Of_Lovers
		case 20399:	// C_Crow_Tengu_Mask
		case 20404:	// C_Blessing_Of_Angels
		case 20430:	// C_Morocc_Kid_Servant
		case 31047:	// C_First_Love_Cheek
		case 31122:	// C_Bloody_Stop_Bandage
		case 31167:	// C_Lunatic_Ear_Black
		case 31168:	// C_Mouton_Life_BL
		case 31183:	// C_Fallen_Angel_Blessing
		case 31186:	// C_Black_Cat
		case 31299:	// C_White_Rabbit
		case 31302:	// C_Black_Magenta_Ribbon
		case 31308:	// C_Protect_Feathers
		case 31327:	// C_Stretched_Nose_M
		case 31391:	// C_Floating_Stone_Of_Int
		case 31398:	// C_Blinking_Thin_Eyes
		case 31437:	// C_Baby_Penguin
		case 31452:	// C_White_Cat
		case 31463:	// C_Flying_Drone
		case 31472:	// C_Fairy_Feathers
		case 31483:	// C_CatEarRibbon_TW
		case 31488:	// C_Mvp
		case 31512:	// C_Panda_Rabbit
		case 31567:	// C_Sheep_Horn
		case 31568:	// C_Floating_Ball_TW
		case 31574:	// C_Cyber_Income
		case 31600:	// C_Kishu_Inu
		case 31614:	// C_Fox
		case 31673:	// C_Picnic_Basket
		case 31688:	// C_Poring_On_Shoulder
		case 31699:	// C_Smiling_Eyes
			// mid + low
		case 19554:	// C_Hahoe_Mask
		case 19563:	// C_Dragon_Arhat_Mask
		case 19564:	// C_Tiger_Arhat_Mask
		case 19638:	// C_Mr_Smile
		case 19732:	// C_Goblin_Mask_04
		case 19736:	// C_Gas_Mask
		case 19791:	// C_Alarm_Mask
		case 19792:	// C_Goblin_Mask_01
		case 19793:	// C_Goblin_Mask_02
		case 19794:	// C_Goblin_Mask_03
		case 19882:	// C_Flowerpot_Mask
		case 20166:	// C_Hockey_Mask
		case 20195:	// C_Scratching_Cat
		case 20230:	// C_Mask_Of_Bankrupt
		case 20299:	// C_Face_Crusher
		case 31505:	// C_Falcon_Mask
		case 33052: // C Blade of Dragon
		case 33011: // C Ultimaweapon
		case 33002: // sao	
			break;
		default:
			mes "[Aver]";
			mes "Well...";
			mes "This hat is currently not available for upgrade.";
			close;
		}
		break;

	case EQI_COSTUME_HEAD_LOW:
		switch(.@equip_id) {
		case 19513:	// Chicken_Beak
		case 19514:	// Charlie_Beard
		case 19528:	// C_Iron_Cane
		case 19552:	// C_Centimental_Flower
		case 19553:	// C_Assassin_Mask_
		case 19566:	// C_Samurai_Mask
		case 19604:	// C_Invisible_Mask
		case 19606:	// C_Ninja_Scroll
		case 19634:	// C_Flu_Mask
		case 19636:	// C_Pierrot_Nose
		case 19672:	// C_Poring_Letter
		case 19783:	// C_Granpa_Beard
		case 19785:	// C_Well_Baked_Toast
		case 19798:	// C_Angry_Mouth
		case 19902:	// C_Cigar
		case 20034:	// C_Jack_Castle_Bat
		case 20054:	// C_Baby_Pacifier
		case 20071:	// C_Worg_In_Mouth
		case 20091:	// C_Smoking_Pipe
		case 20132:	// C_Subject_Aura
		case 20156:	// C_Fan_In_Mouth
		case 20169:	// C_Long_Tongue
		case 20201:	// C_Banshee_Master_Kiss
		case 20202:	// C_Deviruchi_Balloon
		case 20223:	// C_Centimental_Leaf
		case 20235:	// C_Frozen_Land_Rose
		case 20239:	// C_Large_Ribbon_Muffler
		case 20240:	// C_Gift_Of_Snow
		case 20264:	// C_Blood_Sucker
		case 20305:	// C_NettyHeart_BalloonGum
		case 20340:	// C_Straight_Pony_BL
		case 20342:	// C_Loose_WAver_Twin_BL
		case 20344:	// C_Happy_Balloon_J
		case 20357:	// C_Straight_Pony_YL
		case 20358:	// C_Straight_Pony_GN
		case 20359:	// C_Straight_Pony_PP
		case 20360:	// C_Straight_Pony_RD
		case 20361:	// C_Straight_Pony_OM
		case 20362:	// C_Straight_Pony_BU
		case 20363:	// C_Straight_Pony_WH
		case 20364:	// C_Loose_WAver_Twin_YL
		case 20365:	// C_Loose_WAver_Twin_GN
		case 20366:	// C_Loose_WAver_Twin_PP
		case 20367:	// C_Loose_WAver_Twin_RD
		case 20368:	// C_Loose_WAver_Twin_OM
		case 20369:	// C_Loose_WAver_Twin_BU
		case 20370:	// C_Loose_WAver_Twin_WH
		case 20405:	// C_Eremes_Scarf
		case 20407:	// C_Subject_Aura_Red
		case 20429:	// C_Piamette_BowTie
		case 20440:	// C_Tone_Of_Gold
		case 20448:	// C_Cons_Of_Water
		case 20462:	// C_Cat_Ears_Cape
		case 20497:	// C_Umbala_Spirit
		case 20798:	// GrimReaper_Protection
		case 31029:	// C_Pig_Nose
		case 31045:	// C_Blue_Rear_Ribbon
		case 31057:	// C_Eremes_Scarf_Black
		case 31063:	// C_Hair_Bun_BU
		case 31064:	// C_Hair_Bun_RD
		case 31065:	// C_Hair_Bun_YL
		case 31066:	// C_Hair_Bun_GN
		case 31067:	// C_Hair_Bun_BL
		case 31068:	// C_Hair_Bun_WH
		case 31069:	// C_Hair_Bun_OM
		case 31070:	// C_Hair_Bun_PP
		case 31079:	// C_Long_Pony_BU
		case 31080:	// C_Long_Pony_RD
		case 31081:	// C_Long_Pony_YL
		case 31082:	// C_Long_Pony_GN
		case 31083:	// C_Long_Pony_BL
		case 31084:	// C_Long_Pony_WH
		case 31085:	// C_Long_Pony_OM
		case 31086:	// C_Long_Pony_PP
		case 31152:	// C_Piamette_BowTie_Red
		case 31178:	// C_Flame_Muffler
		case 31189:	// C_Cat_Ears_Cape_Red
		case 31210:	// C_Side_Pigtail_BU
		case 31211:	// C_Side_Pigtail_RD
		case 31212:	// C_Side_Pigtail_YL
		case 31213:	// C_Side_Pigtail_GN
		case 31214:	// C_Side_Pigtail_BL
		case 31215:	// C_Side_Pigtail_WH
		case 31216:	// C_Side_Pigtail_OM
		case 31217:	// C_Side_Pigtail_PP
		case 31226:	// C_Long_Twin_BU
		case 31227:	// C_Long_Twin_RD
		case 31228:	// C_Long_Twin_YL
		case 31229:	// C_Long_Twin_GN
		case 31230:	// C_Long_Twin_BL
		case 31231:	// C_Long_Twin_WH
		case 31232:	// C_Long_Twin_OM
		case 31233:	// C_Long_Twin_PP
		case 31251:	// C_Cat_Mouth
		case 31296:	// C_Strawberry_In_Mouth
		case 31300:	// C_Warm_Cat_Muffler
		case 31315:	// C_Stall_Of_Angel
		case 31330:	// C_Fallen_Angel_Valletta
		case 31381:	// C_Diabolic_Lapel
		case 31383:	// C_Volume_Low_Twin
		case 31393:	// C_Vajra
		case 31395:	// C_Book_Of_Magic
		case 31404:	// C_Poring_Traffic_Light
		case 31418:	// C_Leek_In_Mouth
		case 31432:	// C_Luwmin_Ice
		case 31438:	// C_Fluffy_Angel_Cape
		case 31450:	// C_Lolita_Two_Side_Up
		case 31453:	// C_L_RibbonMuff_Black
		case 31460:	// C_Blessing_Sky_Lantern
		case 31473:	// C_Tipsy
		case 31490:	// C_Poring_Muffler
		case 31492:	// C_Cat_Ears_Cape_Brown
		case 31493:	// C_Volume_Low_Twin_WH
		case 31498:	// C_Elephangel_TH
		case 31533:	// C_Warm_Cat_Muffler_BL
		case 31545:	// C_Eremes_Scarf_BU
		case 31572:	// C_Mobile_Pursuit_System
		case 31586:	// C_Poporing_Muffler
		case 31611:	// C_Dark_Snake_Lord_Stall
		case 31616:	// C_Sleep_Sheep_TW
		case 31625:	// C_Protect_Cloth
		case 31698:	// C_Pigtail_Red_Hood	
			break;
		default:
			mes "[Aver]";
			mes "Well...";
			mes "This hat is currently not available for upgrade.";
			close;
		}
		break;

	default:
		mes "An unknown error has occurred.";
		close;
	}

	.@location = getiteminfo(.@equip_id, 5);
	.@equip_refine = getequiprefinerycnt(.@part);
	setarray .@card[0], getequipcardid(.@part, 0), getequipcardid(.@part, 1), getequipcardid(.@part, 2), getequipcardid(.@part, 3);

	mes "[Aver]";
	mes "Wow~ This ^0000FF" + getitemname(.@equip_id) + "^000000!!! looks great on you!!";
	mes "What kind of stone do you want to use for the upgrade?";
	next;
	if (.@part == EQI_COSTUME_HEAD_TOP)
		.@slot = select( "Upper", "Middle", "Lower", "Cancel" ) - 1;	// the slot enchanted changes according to the location
	else if (.@part == EQI_COSTUME_HEAD_MID)
		.@slot = select( "", "Middle", "Lower", "Cancel" ) - 1;
	else if (.@part == EQI_COSTUME_HEAD_LOW)
		.@slot = 2;

	switch(.@slot) {
	case 0:
		if (!(.@location & 1024)) {
			mes "[Aver]";
			mes "The costume can't be enhanced at this location.";	// custom
			close;
		}
		setarray .@stone_id[0],
			45020, 45020, "Assassin_Cross_Stone_II_Top",
			45012, 45012, "High_Wizard_Stone_II_Top",
			25409, 25409, "Champion_Stone_Top",
			25413, 25413, "Sniper_Stone_Top",
			25417, 25417, "Professor_Stone_Top",
			25445, 25445, "Lord_Knight_Stone_Top",
			25450, 25450, "Creator_Stone_Top",
			25453, 25453, "High_Wizard_Stone_Top",
			25490, 25490, "Stalker_Stone_Top",
			25494, 25494, "Whitesmith_Stone_Top",
			25498, 25498, "High_Priest_Stone_Top",
			25710, 25710, "Paladin_Stone_Top",
			25714, 25714, "Assassin_Cross_Stone_Top",
			25800, 25800, "Champion_Stone_II_Top",
			25804, 25804, "Professor_Stone_II_Top",
			25808, 25808, "Stalker_Stone_II_Top",
			25843, 25843, "Soul_Linker_Stone_Top",
			25846, 25846, "Star_Gladiator_Stone_Top",
			25850, 25850, "Ninja_Stone_Top",
			25855, 25855, "Gunslinger_Stone_Top",
			25859, 25859, "Doram_Stone_Top",
			45000, 45000, "Sniper_Stone_II_Top",
			45004, 45004, "Mastersmith_Stone_II_Top",
			45008, 45008, "High_Priest_Stone_II_Top",
			1000218, 1000218, "Paladin_Stone_II_Top",
			1000297, 1000297, "Lord_Knight_Stone_II_Top",
			1000301, 1000301, "Biochemist_Stone_II_Top",
			1000305, 1000305, "Clown_Gypsy_Stone_II_Top";

		break;
	case 1:
		if (!(.@location & 2048)) {
			mes "[Aver]";
			mes "The costume can't be enhanced at this location.";	// custom
			close;
		}
		setarray .@stone_id[0],
			25410, 25410, "Champion_Stone_Middle",
			25414, 25414, "Sniper_Stone_Middle",
			25418, 25418, "Professor_Stone_Middle",
			25446, 25446, "Lord_Knight_Stone_Middle",
			25451, 25451, "Creator_Stone_Middle",
			25454, 25454, "High_Wizard_Stone_Middle",
			25491, 25491, "Stalker_Stone_Middle",
			25495, 25495, "Whitesmith_Stone_Middle",
			25499, 25499, "Clown_Gypsy_Stone_Middle",
			25707, 25707, "High_Priest_Stone_Middle",
			25711, 25711, "Paladin_Stone_Middle",
			25715, 25715, "Assassin_Cross_Stone_Middle",
			25799, 25799, "Champion_Stone_II_Middle",
			25807, 25807, "Stalker_Stone_II_Middle",
			25844, 25844, "Soul_Linker_Stone_Middle",
			25847, 25847, "Star_Gladiator_Stone_Middle",
			25851, 25851, "Ninja_Stone_Middle",
			25856, 25856, "Gunslinger_Stone_Middle",
			25860, 25860, "Doram_Stone_Middle",
			45001, 45001, "Sniper_Stone_II_Middle",
			45005, 45005, "Mastersmith_Stone_II_Middle",
			45009, 45009, "High_Priest_Stone_II_Middle",
			45013, 45013, "High_Wizard_Stone_II_Middle",
			45021, 45021, "Assassin_Cross_Stone_II_Middle",
			1000219, 1000219, "Paladin_Stone_II_Middle",
			1000298, 1000298, "Lord_Knight_Stone_II_Middle",
			1000302, 1000302, "Biochemist_Stone_II_Middle",
			1000306, 1000306, "Clown_Gypsy_Stone_II_Middle";

		break;
	case 2:
		if (!(.@location & 4096)) {
			mes "[Aver]";
			mes "The costume can't be enhanced at this location.";	// custom
			close;
		}
		setarray .@stone_id[0],
			25411, 25411, "Champion_Stone_Lower",
			25415, 25415, "Sniper_Stone_Lower",
			25419, 25419, "Professor_Stone_Lower",
			25447, 25447, "Lord_Knight_Stone_Lower",
			25452, 25452, "Creator_Stone_Lower",
			25455, 25455, "High_Wizard_Stone_Lower",
			25492, 25492, "Stalker_Stone_Lower",
			25496, 25496, "Whitesmith_Stone_Lower",
			25500, 25500, "Clown_Gypsy_Stone_Lower",
			25708, 25708, "High_Priest_Stone_Lower",
			25712, 25712, "Paladin_Stone_Lower",
			25716, 25716, "Assassin_Cross_Stone_Lower",
			25798, 25798, "Champion_Stone_II_Lower",
			25802, 25802, "Professor_Stone_II_Lower",
			25806, 25806, "Stalker_Stone_II_Lower",
			25845, 25845, "Soul_Linker_Stone_Lower",
			25848, 25848, "Star_Gladiator_Stone_Lower",
			25852, 25852, "Ninja_Stone_Lower",
			25857, 25857, "Gunslinger_Stone_Lower",
			25861, 25861, "Doram_Stone_Lower",
			45002, 45002, "Sniper_Stone_II_Bottom",
			45006, 45006, "Mastersmith_Stone_II_Bottom",
			45010, 45010, "High_Priest_Stone_II_Bottom",
			45014, 45014, "High_Wizard_Stone_II_Lower",
			45022, 45022, "Paladin_Stone_II_Middle",
			45022, 45022, "Assassin_Cross_Stone_II_Lower",
			1000220, 1000220, "Paladin_Stone_II_Lower",
			1000299, 1000299, "Lord_Knight_Stone_II_Lower",
			1000303, 1000303, "Biochemist_Stone_II_Lower",
			1000307, 1000307, "Clown_Gypsy_Stone_II_Lower";

		break;
	default:
		mes "[Aver]";
		mes "Please check our other upgrading services~";
		close;
	}
	.@size = getarraysize(.@stone_id);
	for ( .@i = 0; .@i < .@size; .@i += 2 )
		.@menu$ += sprintf( "%d. %s [%d] left:", (.@i/2)+1, getitemname(.@stone_id[.@i]), countitem(.@stone_id[.@i]) );
	.@s = (select(.@menu$) - 1) * 2;
	.@stone = .@stone_id[.@s];
	.@enchant = .@stone_id[.@s+1];

	if (getequipid(.@part) < 0 || countitem(.@stone) < 1) {
		mes "[Aver]";
		mes "Hmm? Think you are lack of ingredients.";
		mes "You must hAver both costume item and ability stone for this upgrading work.";
		close;
	}
	mes "^FF0000   !!! Caution !!!^000000";
	mes "^FF0000This upgrade can be failed.^000000";
	mes "^FF0000If the item already has extra ability,^000000";
	mes "^FF0000we will reset item's ability.^000000";
	mes "^FF0000Are you sure about upgrading this item?^000000";
	next;
	if (select( "Yes.", "No." ) == 2) {
		mes "[Aver]";
		mes "Please check our other upgrading services~";
		close;
	}
	delitem .@stone, 1;

	// anti-hack
	if (callfunc("F_IsEquipIDHack", .@part, .@equip_id) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3]) || callfunc("F_IsEquipRefineHack", .@part, .@equip_refine))
		close;

	delequip .@part;
	if (rand(1,100) < 51) {
		mes "[Aver]";
		mes "Wow... Elegance!!";
		mes "This is perfect... Wow!";
		.@card[.@slot] = .@enchant;
	}
	else {
		mes "[Aver]";
		mes "History is known for its failure...";
		mes "History of Fashion also is...";
		mes "Sorry...to disappoint you..~ LoL.";
		.@card[.@slot] = 0;
	}
	getitem2 .@equip_id,1,1,.@equip_refine,0,.@card[0],.@card[1],.@card[2],.@card[3];
	close;
}